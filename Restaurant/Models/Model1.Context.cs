//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Restaurant.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class RestauranteBDEntities : DbContext
    {
        public RestauranteBDEntities()
            : base("name=RestauranteBDEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Almacen> Almacen { get; set; }
        public virtual DbSet<Asistencia> Asistencia { get; set; }
        public virtual DbSet<Caja> Caja { get; set; }
        public virtual DbSet<Cancelaciones> Cancelaciones { get; set; }
        public virtual DbSet<Cliente> Cliente { get; set; }
        public virtual DbSet<CorteCaja> CorteCaja { get; set; }
        public virtual DbSet<Depositos> Depositos { get; set; }
        public virtual DbSet<Empleado> Empleado { get; set; }
        public virtual DbSet<EmpleadoAsistencia> EmpleadoAsistencia { get; set; }
        public virtual DbSet<EstadoPedido> EstadoPedido { get; set; }
        public virtual DbSet<Huella_Digital> Huella_Digital { get; set; }
        public virtual DbSet<Ingrediente> Ingrediente { get; set; }
        public virtual DbSet<Inventario> Inventario { get; set; }
        public virtual DbSet<InventarioAlmacen> InventarioAlmacen { get; set; }
        public virtual DbSet<InventarioIngrediente> InventarioIngrediente { get; set; }
        public virtual DbSet<Mesa> Mesa { get; set; }
        public virtual DbSet<Pedido> Pedido { get; set; }
        public virtual DbSet<PedidoProducto> PedidoProducto { get; set; }
        public virtual DbSet<Producto> Producto { get; set; }
        public virtual DbSet<Promociones> Promociones { get; set; }
        public virtual DbSet<PromocionProducto> PromocionProducto { get; set; }
        public virtual DbSet<Propina> Propina { get; set; }
        public virtual DbSet<Proveedores> Proveedores { get; set; }
        public virtual DbSet<Recetas> Recetas { get; set; }
        public virtual DbSet<Repartidor> Repartidor { get; set; }
        public virtual DbSet<Reservacion> Reservacion { get; set; }
        public virtual DbSet<ReservaMesa> ReservaMesa { get; set; }
        public virtual DbSet<RetirosParciales> RetirosParciales { get; set; }
        public virtual DbSet<Sucursal> Sucursal { get; set; }
        public virtual DbSet<SucursalMesa> SucursalMesa { get; set; }
        public virtual DbSet<Tarjeta> Tarjeta { get; set; }
        public virtual DbSet<TarjetaCliente> TarjetaCliente { get; set; }
        public virtual DbSet<TipoCliente> TipoCliente { get; set; }
        public virtual DbSet<TipoIngrediente> TipoIngrediente { get; set; }
        public virtual DbSet<TipoPago> TipoPago { get; set; }
        public virtual DbSet<TipoPrioridad> TipoPrioridad { get; set; }
        public virtual DbSet<TipoProducto> TipoProducto { get; set; }
        public virtual DbSet<TipoSucursal> TipoSucursal { get; set; }
        public virtual DbSet<TipoVehiculo> TipoVehiculo { get; set; }
        public virtual DbSet<Vehiculo> Vehiculo { get; set; }
        public virtual DbSet<Factura> Factura { get; set; }
        public virtual DbSet<Venta> Venta { get; set; }
        public virtual DbSet<Ventas_log> Ventas_log { get; set; }
        public virtual DbSet<Productodos> Productodos { get; set; }
    
        public virtual int sp_Cancelar_Pedido(Nullable<int> idPedido)
        {
            var idPedidoParameter = idPedido.HasValue ?
                new ObjectParameter("idPedido", idPedido) :
                new ObjectParameter("idPedido", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Cancelar_Pedido", idPedidoParameter);
        }
    
        public virtual int sp_Inserta_Producto(string nombre, string descripcion, Nullable<int> tipoProductoID, Nullable<decimal> precio, Nullable<bool> estado)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var tipoProductoIDParameter = tipoProductoID.HasValue ?
                new ObjectParameter("TipoProductoID", tipoProductoID) :
                new ObjectParameter("TipoProductoID", typeof(int));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("precio", precio) :
                new ObjectParameter("precio", typeof(decimal));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Inserta_Producto", nombreParameter, descripcionParameter, tipoProductoIDParameter, precioParameter, estadoParameter);
        }
    
        public virtual int sp_Modifica_Ingrediente(Nullable<int> iD, Nullable<decimal> precio)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("precio", precio) :
                new ObjectParameter("precio", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Modifica_Ingrediente", iDParameter, precioParameter);
        }
    
        public virtual int sp_New_Pedido(Nullable<int> idPedido, Nullable<int> idMesa, Nullable<int> idcliente, Nullable<int> idEmpleado, Nullable<int> estado, Nullable<System.DateTime> fecha)
        {
            var idPedidoParameter = idPedido.HasValue ?
                new ObjectParameter("idPedido", idPedido) :
                new ObjectParameter("idPedido", typeof(int));
    
            var idMesaParameter = idMesa.HasValue ?
                new ObjectParameter("idMesa", idMesa) :
                new ObjectParameter("idMesa", typeof(int));
    
            var idclienteParameter = idcliente.HasValue ?
                new ObjectParameter("idcliente", idcliente) :
                new ObjectParameter("idcliente", typeof(int));
    
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("idEmpleado", idEmpleado) :
                new ObjectParameter("idEmpleado", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_New_Pedido", idPedidoParameter, idMesaParameter, idclienteParameter, idEmpleadoParameter, estadoParameter, fechaParameter);
        }
    
        public virtual ObjectResult<sp_Pedido_Por_Estado_Result> sp_Pedido_Por_Estado(Nullable<int> pedidoEstado)
        {
            var pedidoEstadoParameter = pedidoEstado.HasValue ?
                new ObjectParameter("PedidoEstado", pedidoEstado) :
                new ObjectParameter("PedidoEstado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Pedido_Por_Estado_Result>("sp_Pedido_Por_Estado", pedidoEstadoParameter);
        }
    
        public virtual int sp_Ventas_Por_Rango_Fecha(Nullable<System.DateTime> fechaInicial, Nullable<System.DateTime> fechaFinal)
        {
            var fechaInicialParameter = fechaInicial.HasValue ?
                new ObjectParameter("fechaInicial", fechaInicial) :
                new ObjectParameter("fechaInicial", typeof(System.DateTime));
    
            var fechaFinalParameter = fechaFinal.HasValue ?
                new ObjectParameter("fechaFinal", fechaFinal) :
                new ObjectParameter("fechaFinal", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Ventas_Por_Rango_Fecha", fechaInicialParameter, fechaFinalParameter);
        }
    }
}
